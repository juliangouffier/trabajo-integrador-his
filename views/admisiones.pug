extends layout

block content
  .container.mt-5
    h2.text-dark.mb-4 Admisión de Pacientes
    if error
      .alert.alert-danger= error

    .card.shadow-sm.border-0.p-4
      .card-body
        .mb-4
          label.form-label Buscar Paciente por DNI
          .input-group
            input.form-control(type='text', id='buscarDni', placeholder='Ingrese DNI')
            button.btn.btn-outline-primary(type='button', id='btnBuscarPaciente') Buscar
            button.btn.btn-outline-danger(type='button', id='limpiarCampos') Limpiar

        form(id='form-admision', action='/admisiones/registro', method='POST')
          input(type='hidden', name='pacienteId', id='pacienteId', value=(formData && formData.pacienteId) || '')

          .row.mb-3
            .col-md-6
              label.form-label Nombre(s)*
              input.form-control(type='text', name='nombre', id='nombre', required, value=(formData && formData.nombre) || '')
            .col-md-6
              label.form-label Apellido(s)*
              input.form-control(type='text', name='apellido', id='apellido', required, value=(formData && formData.apellido) || '')

          .row.mb-3
            .col-md-12
              label.form-label Dirección*
              input.form-control(type='text', name='direccion', id='direccion', required, value=(formData && formData.direccion) || '')

          .row.mb-3
            .col-md-4
              label.form-label Fecha de Nacimiento*
              input.form-control(type='date', name='fechaNacimiento', id='fechaNacimiento', required, value=(formData && formData.fechaNacimiento) || '')
            .col-md-4
              label.form-label Género*
              select.form-select(name='genero', id='genero', required)
                option(value='') Seleccionar
                option(value='M', selected=(formData && formData.genero === 'M')) Masculino
                option(value='F', selected=(formData && formData.genero === 'F')) Femenino
            .col-md-4
              label.form-label Documento*
              input.form-control(type='text', name='dni', id='dni', required, value=(formData && formData.dni) || '')

          .row.mb-3
            .col-md-6
              label.form-label Teléfono
              input.form-control(type='text', name='telefono', id='telefono', value=(formData && formData.telefono) || '')
            .col-md-6
              label.form-label Email
              input.form-control(type='text', name='email', id='email', value=(formData && formData.email) || '')
            .col-md-6
              label.form-label Obra Social
              select.form-select(name='obraSocial', id='obraSocial')
                option(value='') Sin obra social
                each obra in obrasSociales
                  option(value=obra.id, selected=(formData && formData.obraSocial == obra.id))= obra.nombre

          .row.mb-3
            .col-md-6
              label.form-label Telefono de Emergencia
              input.form-control(type='text', name='contactoEmergencia', id='contactoEmergencia', value=(formData && formData.contactoEmergencia) || '')
            .col-md-6
              label.form-label Notas Adicionales
              textarea.form-control(name='notas', id='notas')= (formData && formData.notas) || ''

          .row.mb-3
            .col-md-6.form-check
              input.form-check-input(type='checkbox', id='emergencia', name='emergencia', checked=(formData && formData.emergencia))
              label.form-check-label(for='emergencia') Llegada por Emergencia
            .col-md-6.form-check
              input.form-check-input(type='checkbox', id='derivado', name='derivado', checked=(formData && formData.derivado))
              label.form-check-label(for='derivado') Paciente Derivado Guardia

          .row.mb-3
            .col-md-6
              label.form-label Fecha de Ingreso*
              input.form-control(type='date', name='fechaIngreso', required, value=(formData && formData.fechaIngreso) || '')
            .col-md-6
              label.form-label Motivo de Internación*
              input.form-control(type='text', name='motivo', required, value=(formData && formData.motivo) || '')

          .row.mb-3
            .col-md-6
              label.form-label Seleccionar Cama*
              select.form-select(name='cama', required)
                option(value='') Seleccione una cama disponible
                each cama in camasDisponibles
                  option(value=cama.id, selected=(formData && formData.cama == cama.id)) #{cama.numero} (Hab. #{cama.habitacion})#{cama.generoCompanero ? ' - Compañero: ' + (cama.generoCompanero === 'M' ? 'Masculino' : cama.generoCompanero === 'F' ? 'Femenino' : '') : ''}

          .d-flex.justify-content-end.mt-4
            a.btn.btn-outline-secondary(href='/home') Cancelar
            button.btn.btn-primary.ms-2(type='submit') Registrar Paciente

block scripts
  script.
    document.getElementById('limpiarCampos').addEventListener('click', () => {
      const campos = [
        'pacienteId', 'nombre', 'apellido', 'dni', 'fechaNacimiento',
        'genero', 'telefono', 'email', 'obraSocial',
        'direccion', 'contactoEmergencia', 'notas', 'emergencia', 'derivado'
      ];

      campos.forEach(id => {
        const el = document.getElementById(id);
        if (el) {
          if (el.type === 'checkbox') {
            el.checked = false;
          } else {
            el.value = '';
          }
        }
      });

      document.getElementById('buscarDni').value = '';
    });

    document.addEventListener('DOMContentLoaded', () => {
      document.getElementById('btnBuscarPaciente').addEventListener('click', async () => {
        const dni = document.getElementById('buscarDni').value.trim();
        if (!dni) return;

        try {
          const res = await fetch(`/pacientes/buscar?q=${dni}`, { cache: "no-store" });
          if (!res.ok) throw new Error('Error en la respuesta del servidor');

          const pacientes = await res.json();
          if (pacientes.length > 0) {
            const p = pacientes[0];

            const setVal = (id, val) => {
              const el = document.getElementById(id);
              if (el) el.value = val || '';
            };

            setVal('pacienteId', p.id);
            setVal('nombre', p.nombre);
            setVal('apellido', p.apellido);
            setVal('dni', p.dni);
            setVal('fechaNacimiento', p.fecha_nacimiento);
            setVal('genero', p.sexo);
            setVal('telefono', p.telefono);
            setVal('email', p.email);
            setVal('obraSocial', p.obraSocial?.id);
            setVal('direccion', p.direccion);
            setVal('contactoEmergencia', p.contacto_emergencia);
          } else {
            alert('Paciente no encontrado');
          }
        } catch (err) {
          console.error('Error al buscar paciente:', err);
          alert('Error al buscar paciente');
        }
      });
    });
